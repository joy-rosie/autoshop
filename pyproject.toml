[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["autoshop"]

[project]
name = "autoshop"
authors = [
    {name = "Josie"},
]
description = "Python package to help with grocery shopping"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "chromedriver-binary-auto==0.3.1",
    "undetected-chromedriver==3.5.5",
    "selenium==4.18.1",
    "requests==2.31.0",
    "python-dotenv==1.0.0",
    "pandas==2.2.1",
    "pyarrow==15.0.0",
    "pygsheets==2.0.6",
    "pint==0.22",
    "jupyterlab==4.1.2",
]
dynamic = ["version"]

# uv add --group <group_name> <package_name>
[dependency-groups]
dev = [
    "autoshop",
    "black>=24.10.0",
    "isort>=5.13.2",
    "pre-commit>=4.0.1",
    "ruff>=0.8.0",
]
test = [
    "pytest>=8.3.3",
    "pytest-mock>=3.12.0",
]

[tool.uv]
default-groups = ["dev", "test"]

[tool.isort]
profile = "black"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
markers = [
    "integration: mark a test that needs external data sources.",
]
